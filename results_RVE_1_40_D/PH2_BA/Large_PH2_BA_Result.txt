login as: nguyenb5
nguyenb5@puhti.csc.fi's password:
Last login: Tue Aug  9 23:27:29 2022 from dzc096yjvbplpjxw-by6t-3.rev.dnainternet.fi
┌─ Welcome ───────────────────────────────────────────────────────────────────┐
│         CSC - Tieteen tietotekniikan keskus - IT Center for Science         │
│            ____        __    __  _                                          │
│           / __ \__  __/ /_  / /_(_)   - -  -   -                            │
│          / /_/ / / / / __ \/ __/ /   - -  -   -                             │
│         / ____/ /_/ / / / / /_/ /   - -  -   -                              │
│        /_/    \__,_/_/ /_/\__/_/   - -  -   -                               │
│                                                                             │
│      Puhti.csc.fi - Atos BullSequana X400 - 682 CPU nodes - 80 GPU nodes    │
├─ Contact ───────────────────────────────────────────────────────────────────┤
│ Servicedesk : 09-457 2821, servicedesk@csc.fi   Switchboard : 09-457 2001   │
├─ User Guide ────────────────────────────────────────────────────────────────┤
│ https://docs.csc.fi                                                         │
├─ Manage my account ─────────────────────────────────────────────────────────┤
│ https://my.csc.fi/                                                          │
├─ Billing ───────────────────────────────────────────────────────────────────┤
│ Billing has changed significantly from Sisu/Taito. CPU, GPU, Memory, local  │
│ disk and lustre scratch space are all billed. See for details:              │
│ https://docs.csc.fi/accounts/billing/                                       │
├─ Software ──────────────────────────────────────────────────────────────────┤
│ Available modules can be listed with command: module avail and module spider│
├─ Main Partitions ───────────────────────────────────────────────────────────┤
│   small       : 1-40 cores    3 days max runtime                            │
│   large       : 2-1040 cores  3 days max runtime                            │
│   hugemem     : 1-160 cores   3 days max runtime                            │
│   longrun     : 1-40 cores   14 days max runtime                            │
│   gpu         : 1-80 GPUs     3 days max runtime                            │
│                                                                             │
│ See https://docs.csc.fi/computing/running/batch-job-partitions/             │
├─ Storage ───────────────────────────────────────────────────────────────────┤
│ In Puhti there are three main disk areas:                                   │
│   home     Personal home folder                                             │
│   projappl Per project folder where applications and libraries can be stored│
│   scratch  Per project folder for running jobs. Files are removed           │
│            after 90 days (not yet activated).                               │
│                                                                             │
│ Run csc-workspaces to see your folders and quotas                           │
│ See https://docs.csc.fi/computing/disk/ for details                         │
├─ News ──────────────────────────────────────────────────────────────────────┤
│                                                                             │
│  2019-11-25: 90-day /scratch cleaning is not active yet, we'll inform       │
│              users later with more detailed information when it's activated.│
│                                                                             │
│  2020-11-19: Puhti outgoing internet traffic is coming from new addresses,  │
│              puhti-nat-1.csc.fi and puhti-nat-2.csc.fi                      │
│                                                                             │
│  2021-10-13: Limits of the interactive partition have been increased.       │
│              Max two jobs, 8 cores, 76 GiB memory and 720 GiB of NVMe.      │
│                                                                             │
│  2021-10-18: An easy-to-use web interface for Puhti is now open for beta    │
│              test use at https://www.puhti.csc.fi. User documentation at    │
│              https://docs.csc.fi/computing/webinterface                     │
│                                                                             │
│  2022-06-28: Fast NVMe drives has been added to multiple node types, it can │
│              improve IO-intensive job performance a lot.                    │
│              https://docs.csc.fi/support/whats-new/                         │
│                                                                             │
└─────────────────────────────────────────────────────────────────────────────┘

cd /scratch/project_2004956/Binh/PH2BayesLargeRVE
source damask_py/bin/activate
python optimize.py
[nguyenb5@puhti-login1 ~]$ cd /scratch/project_2004956/Binh/PH2BayesLargeRVE
[nguyenb5@puhti-login1 PH2BayesLargeRVE]$ source damask_py/bin/activate
(damask_py) [nguyenb5@puhti-login1 PH2BayesLargeRVE]$ python optimize.py

Welcome to Crystal Plasticity Parameter Calibration

The configurations you have chosen:

Material under study: RVE_1_40_D

CP Law: phenomenological law

The target curve: PH2

Number of fitting parameters in PH law: 4

Range and step of parameters:
{'alpha': {'low': 1.1, 'high': 3, 'step': 0.1}, 'h0': {'low': 100, 'high': 1000, 'step': 50}, 'tau0': {'low': 50, 'high': 100, 'step': 1}, 'taucs': {'low': 100, 'high': 600, 'step': 1}}

Default values of hardening parameters for yield stress optimization:
{'alpha': 1.5, 'h0': 800, 'taucs': 200}

Number of initial simulations: 30

Chosen optimization algorithm: BA

The optimization process is auto

The true and predict yield stress deviation percentage is: 2% and 10%

The true and predict hardening deviation percentage is 5% and 25%

The weights of w1, w2, w3, w4 of hardening objective functions are:
{'w1': 0.9, 'w2': 0.025, 'w3': 0.05, 'w4': 0.025}

The optimization process is auto

The path to your main project folder is:
/scratch/project_2004956/Binh/PH2BayesLargeRVE
--------------------------------
Stage 1: Running initial simulations/Loading progress and preparing data
30 initial simulations completed.
No additional simulations completed.
Experimental and simulated curves preparation completed
--------------------------------
Stage 2: Initialize and train the RSM (MLP) with the initial data
Fitting response surface method (multilayer perceptron)...
Input layer size is: 4
Output layer size is: 21
Hidden layer size is: [12, 15]
MLP training finished
--------------------------------
Stage 3: Optimize the yield stress parameters with Bayesian algorithm
{'tau0': (50, 100)}
The experimental yield stress is:  166.63154841241928 MPa
The simulated yield stress should lie in the range of (163.29891744417088, 169.96417938066767) MPa
Maximum deviation: 3.3326309682483855 MPa
#### Iteration 30 ####
The initial candidate partial result:
{'alpha': 2, 'h0': 288, 'tau0': 59, 'taucs': 416}
The initial candidate simulated yield stress:
138.1420750415732
#### Iteration 31 ####
#0 Result: {'tau0': 98}; f(x) = 0.016427338402698933.
#1 Result: {'tau0': 87}; f(x) = 0.02732494066415561.
#2 Result: {'tau0': 87}; f(x) = 0.02732494066415561.
#3 Result: {'tau0': 80}; f(x) = 0.047287439426228484.
#4 Result: {'tau0': 78}; f(x) = 0.05976154614748988.
#5 Result: {'tau0': 75}; f(x) = 0.09889217764898676.
#6 Result: {'tau0': 74}; f(x) = 0.12650261452784475.
#7 Result: {'tau0': 71}; f(x) = 0.7789192837026735.
#8 Result: {'tau0': 71}; f(x) = 0.7789192837026735.
#9 Result: {'tau0': 71}; f(x) = 0.7789192837026735.
#10 Result: {'tau0': 68}; f(x) = 0.18736013046977018.
#11 Result: {'tau0': 50}; f(x) = 0.02173636856041765.
#12 Result: {'tau0': 59}; f(x) = 0.037365875274179415.
#13 Result: {'tau0': 93}; f(x) = 0.020064651287232844.
#14 Result: {'tau0': 72}; f(x) = 0.2864608544800194.
#15 Result: {'tau0': 71}; f(x) = 0.7789192837026735.
#16 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#17 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#18 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#19 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#20 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#21 Result: {'tau0': 64}; f(x) = 0.06916465833106467.
#22 Result: {'tau0': 54}; f(x) = 0.02559736436329753.
#23 Result: {'tau0': 84}; f(x) = 0.0333606246451959.
#24 Result: {'tau0': 90}; f(x) = 0.02313864219101166.
#25 Result: {'tau0': 96}; f(x) = 0.017711642517705458.
#26 Result: {'tau0': 61}; f(x) = 0.04578601032242353.
#27 Result: {'tau0': 66}; f(x) = 0.10254925758188542.
#28 Result: {'tau0': 57}; f(x) = 0.031561630868808206.
#29 Result: {'tau0': 52}; f(x) = 0.022733381670363872.
#30 Result: {'tau0': 100}; f(x) = 0.01531669628956206.
#31 Result: {'tau0': 69}; f(x) = 0.319461615783475.
#32 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#33 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#34 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#35 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#36 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#37 Result: {'tau0': 85}; f(x) = 0.03107278201162306.
#38 Result: {'tau0': 82}; f(x) = 0.03912154706487998.
#39 Result: {'tau0': 67}; f(x) = 0.13254929348267078.
#40 Result: {'tau0': 89}; f(x) = 0.024383880666977744.
#41 Result: {'tau0': 91}; f(x) = 0.022014408175119123.
#42 Result: {'tau0': 94}; f(x) = 0.01921379426198971.
#43 Result: {'tau0': 97}; f(x) = 0.01704533278156982.
#44 Result: {'tau0': 77}; f(x) = 0.06884150831008837.
#45 Result: {'tau0': 65}; f(x) = 0.08335122575920063.
#46 Result: {'tau0': 60}; f(x) = 0.041149622494666735.
#47 Result: {'tau0': 62}; f(x) = 0.05159983927723809.
#48 Result: {'tau0': 79}; f(x) = 0.05279770711178025.
#49 Result: {'tau0': 56}; f(x) = 0.029286978156068715.
#50 Result: {'tau0': 58}; f(x) = 0.03421937129270583.
#51 Result: {'tau0': 51}; f(x) = 0.02201786907324206.
#52 Result: {'tau0': 53}; f(x) = 0.024080516093044402.
#53 Result: {'tau0': 73}; f(x) = 0.17550243433718088.
#54 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#55 Result: {'tau0': 85}; f(x) = 0.03107278201162306.
#56 Result: {'tau0': 81}; f(x) = 0.042818643342870895.
#57 Result: {'tau0': 83}; f(x) = 0.03601214523182942.
#58 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#59 Result: {'tau0': 86}; f(x) = 0.02907859710392443.
#60 Result: {'tau0': 99}; f(x) = 0.015852588090910884.
#61 Result: {'tau0': 74}; f(x) = 0.12650261452784475.
#62 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#63 Result: {'tau0': 67}; f(x) = 0.13254929348267078.
#64 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#65 Result: {'tau0': 68}; f(x) = 0.18736013046977018.
#66 Result: {'tau0': 89}; f(x) = 0.024383880666977744.
#67 Result: {'tau0': 91}; f(x) = 0.022014408175119123.
#68 Result: {'tau0': 92}; f(x) = 0.02099435819014785.
#69 Result: {'tau0': 76}; f(x) = 0.08117494861570577.
#70 Result: {'tau0': 77}; f(x) = 0.06884150831008837.
#71 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#72 Result: {'tau0': 94}; f(x) = 0.01921379426198971.
#73 Result: {'tau0': 95}; f(x) = 0.018432164115346764.
#74 Result: {'tau0': 96}; f(x) = 0.017711642517705458.
#75 Result: {'tau0': 98}; f(x) = 0.016427338402698933.
#76 Result: {'tau0': 88}; f(x) = 0.02577077083696175.
#77 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#78 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#79 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#80 Result: {'tau0': 64}; f(x) = 0.06916465833106467.
#81 Result: {'tau0': 65}; f(x) = 0.08335122575920063.
#82 Result: {'tau0': 60}; f(x) = 0.041149622494666735.
#83 Result: {'tau0': 61}; f(x) = 0.04578601032242353.
#84 Result: {'tau0': 62}; f(x) = 0.05159983927723809.
#85 Result: {'tau0': 63}; f(x) = 0.05910487476416492.
#86 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#87 Result: {'tau0': 80}; f(x) = 0.047287439426228484.
#88 Result: {'tau0': 78}; f(x) = 0.05976154614748988.
#89 Result: {'tau0': 73}; f(x) = 0.17550243433718088.
#90 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#91 Result: {'tau0': 56}; f(x) = 0.029286978156068715.
#92 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#93 Result: {'tau0': 55}; f(x) = 0.02731815364997048.
#94 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#95 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#96 Result: {'tau0': 58}; f(x) = 0.03421937129270583.
#97 Result: {'tau0': 57}; f(x) = 0.031561630868808206.
#98 Result: {'tau0': 70}; f(x) = 1.0831675268952794.
#99 Result: {'tau0': 53}; f(x) = 0.024080516093044402.
Parameters of the best partial solution : {'alpha': 1.5, 'h0': 800, 'tau0': 70, 'taucs': 200}
Fitness value of the best solution = 1.0831675268952794
Fitness given by the MLP estimate: 0.9232182235617187
Submitted batch job 12703092
path2txt is: ./simulations_RVE_1_40_D/PH2_BA/31/postProc/
files is:
['RVE_1_40_D_tensionX.txt']
The simulated yield stress: 164.6014156563779 MPa
--------------------------------
Yield stress parameters optimization completed
The partial parameter solution is:
{'alpha': 1.5, 'h0': 800, 'tau0': 70, 'taucs': 200}
Succeeded iteration: 31
--------------------------------

